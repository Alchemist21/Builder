{
  "_id": "5bd805a2626daf74460af39d",
  "_type": "CodeStage",
  "container_id": "5bce5e20e6b0b012e91da44b",
  "title": "Abstraction",
  "position": 10,
  "task": "## Storing ERC20 Tokens\n\nSo at this point, the question may occur to you: What if we wanted to store ERC20 tokens or anything more complex transaction for that matter?\n\nIt turns out, it's quite simple to add this flexibilty. All we need to do is add the ability to execute bytecode as part of our multisig execution. \n\n## Adding Bytes\n\nLet's first start by adding a `bytes` array as the last member of our `Transaction` struct.\n\nOnce you've done this, you'll notice the compiler complaining about where we created our struct. We'll need to pass in `bytes` into `submitTransaction`, then through to `addTransaction` to store in our `Transaction` struct.\n\nFinally, we'll need to execute our bytecode inside of the `executeTransaction` function. We'll want to be able to handle regular ether transactions as well as anything more complex with our `bytes`.\n\n",
  "validated_contract": "MultiSig",
  "language_version": "0.4.19",
  "language": "solidity",
  "test_framework": "truffle_with_mocha",
  "updated_at": "2018-11-08T02:51:28.434Z",
  "created_at": "2018-10-30T07:17:54.920Z",
  "abi_validations": [
    {
      "_id": "5bdf6a18e6b0b01c01681105",
      "constant": "true",
      "payable": "false",
      "error": null,
      "task_display": "Add a bytes array to the Transaction struct",
      "name": "transactions",
      "type": "function",
      "outputs": [
        {
          "_id": "5bdf6a18e6b0b01c01681106",
          "name": null,
          "type": "address"
        },
        {
          "_id": "5bdf6a18e6b0b01c01681107",
          "name": null,
          "type": "uint256"
        },
        {
          "_id": "5bdf6a18e6b0b01c01681108",
          "name": null,
          "type": "bool"
        },
        {
          "_id": "5bdf6a18e6b0b01c01681109",
          "name": null,
          "type": "bytes"
        }
      ],
      "inputs": [
        {
          "_id": "5bdf6a18e6b0b01c0168110a",
          "name": null,
          "type": "uint256"
        }
      ]
    }
  ],
  "code_file_ids": [
    "5bd804b3626daf74460af39c",
    "5bcfc074e6b0b0328e69567a",
    "5bd80690626daf74460af3a7",
    "5bd806ba626daf74460af3a8"
  ],
  "completion_message": "## You took a byte out of that stage!\n\nGreat job extending your contract to accept tokens.\n\nLet's move on to our final stage.",
  "details": ""
}