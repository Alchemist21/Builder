{
  "_id": "5bd3e34ce6b0b047781712e0",
  "_type": "CodeStage",
  "code_file_ids": [
    "5bcfc074e6b0b0328e69567a",
    "5bd3e3c1e6b0b047781712e9"
  ],
  "completion_message": "## King of Fallbacks\n\nMight not be your best title, but hey, it's not bad.\n\nLet's move on to executing the transaction! ",
  "container_id": "5bce5e20e6b0b012e91da44b",
  "details": "",
  "language": "solidity",
  "language_version": "0.4.19",
  "position": 6,
  "task": "## Payable Fallback\n\nDefine a fallback `payable` function which will allow our Multi-Sig wallet to accept funds. \n\n## Confirmed Getter\n\nDefine an `isConfirmed` public function with a transaction ID as it's only argument. It should return true if the transaction is confirmed and false if it is not.\n\nWe can use the `isConfirmed` function to check whether a specific transaction has met its confirmation requirements.\n",
  "test_framework": "truffle_with_mocha",
  "title": "Fallback",
  "validated_contract": "MultiSig",
  "updated_at": "2018-11-08T02:51:28.049Z",
  "created_at": "2018-10-28T17:41:08.660Z",
  "abi_validations": [
    {
      "_id": "5bd79375626daf74460af371",
      "constant": "true",
      "payable": "false",
      "error": null,
      "task_display": "Define an isConfirmed function",
      "name": "isConfirmed",
      "type": "function",
      "outputs": [
        {
          "_id": "5bd79375626daf74460af372",
          "name": null,
          "type": "bool"
        }
      ],
      "inputs": [
        {
          "_id": "5bd79375626daf74460af373",
          "name": null,
          "type": "uint256"
        }
      ]
    },
    {
      "_id": "5bd79375626daf74460af374",
      "constant": "nil",
      "payable": "true",
      "error": null,
      "task_display": "Define a payable fallback function",
      "name": null,
      "type": "fallback"
    }
  ]
}