{
  "_id": "5b74a620d9f9970a465ebd41",
  "_type": "CodeStage",
  "code_file_ids": [
    "5b74a6fad9f9970a465ebd42",
    "5b74a71ed9f9970a465ebd43"
  ],
  "completion_message": "",
  "container_id": "5b74a4ebd9f9970a465ebd40",
  "details": "## Block Timestamp\n\nOn the Ethereum blockchain each block will have it's own timestamp. Timestamps will be available to us in [Unix Time](https://en.wikipedia.org/wiki/Unix_time), or seconds since the unix epoch: January 1st, 1970.\n\nSpecifically in our Solidity Contract we can use `block.timestamp` to look up the number of seconds since the epoch. For this challenge we'll be using [`eth_call`](https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_call) to test the function so the `block.timestamp` will be the most recently mined block.\n\n**Real-World Security Considerations**\n\nFor mainnet smart contracts we should be careful about how we use timestamps. For instance, they shouldn't be used for randomness because block miners can manipulate the timestamp within a certain threshold (they cannot be in the future or prior to the parent block). \n\nFor the purposes of this challenge we don't need to be concerned with these security considerations.",
  "language": "solidity",
  "language_version": "0.4.19",
  "position": 0,
  "task": "## Next Meeting Date\n\nSetup for you is a smart contract `Schedule` that can be initialized with an array of `meetings` which each contain a property `date` stored as a timestamp in [Unix Time](?tab=details&scroll=Block%20Timestamp). \n\nYour task is to create a new function `findNextMeetingDate` which returns the nearest meeting date that hasn't already passed as a `uint` timestamp. \n\nIf there are no future meetings, simply return `0`.",
  "test_framework": "truffle_with_mocha",
  "title": "What's on my Schedule?",
  "validated_contract": "Schedule",
  "updated_at": "2018-11-08T02:51:28.744Z",
  "created_at": "2018-10-16T01:50:10.576Z",
  "abi_validations": [
    {
      "_id": "5b76eb9ad9f9970a465ebe4c",
      "constant": "nil",
      "payable": "nil",
      "error": "Could not find a findNextMeetingDate function on your Schedule contract! ",
      "task_display": "Create the findNextMeetingDate function",
      "name": "findNextMeetingDate",
      "type": "function",
      "outputs": [
        {
          "_id": "5b76eb9ad9f9970a465ebe4d",
          "name": null,
          "type": "uint256"
        }
      ]
    }
  ]
}