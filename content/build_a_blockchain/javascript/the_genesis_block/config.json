{
  "_id": "5b3ba85bd9f997b30859bb70",
  "_type": "CodeStage",
  "code_file_ids": [
    "5b3afe0cd9f99763e5c4b503",
    "5b3bab0cd9f997b30859bb73",
    "5b3bad27d9f997b30859bb75"
  ],
  "completion_message": "### It Begins!\n\nWe've created the first block on the chain. Now it's time to move onto appending more blocks at the end.",
  "container_id": "5b3afd70d9f99763e5c4b4fe",
  "details": "## Genesis Blockchain\n\nThe genesis block is the first block in the chain, where it all kicks off. Every block after the genesis block links back to the first one, but the genesis block has no previous block! This is important to keep in mind for the next few stages.\n\nHere are some examples of genesis blocks on live blockchains displayed in their respective block explorers: \n\n### Bitcoin Genesis Block\n\nHere's [Bitcoin's Genesis Block on Block Explorer]\n(https://blockexplorer.com/block/000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f) on January 3rd, 2009. \n\n### Ethereum Genesis Block\n\nHere's [Ethereum's Genesis Block on EtherScan](https://etherscan.io/block/0) on July 30th, 2015. ",
  "language": "javascript",
  "language_version": "8.x/babel",
  "position": 2,
  "task": "## Creating the Genesis Block\n\nNow we're going to add the [Genesis Block](?tab=details&scroll=Genesis%20Blockchain) to our blockchain.\n\nThe `Blockchain.js` file contains the `Blockchain` class with a `chain` array. When a new `Blockchain` is instantiated, we're going to want to build the genesis block. \n\nLet's create a new Block in the Blockchain Constructor and add it to the `chain` array.",
  "test_framework": "mocha_bdd",
  "title": "The Genesis Block",
  "updated_at": "2018-10-16T01:50:10.562Z",
  "created_at": "2018-10-16T01:50:10.562Z"
}