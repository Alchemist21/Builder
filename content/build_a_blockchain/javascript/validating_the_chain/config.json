{
  "_id": "5b3bb51dd9f997b30859bb81",
  "_type": "CodeStage",
  "code_file_ids": [
    "5b3bad27d9f997b30859bb75",
    "5b3afe0cd9f99763e5c4b503",
    "5b3bb91dd9f997b30859bb85"
  ],
  "completion_message": "## ....and you did it\n\nThat was the final coding step of this challenge. Way to go!",
  "container_id": "5b3afd70d9f99763e5c4b4fe",
  "details": "## Blockchain Consensus\n\nWhen a blockchain is running in a peer to peer network, we'll need to introduce something to slow down the network long enough to be able to come to a consensus. For Proof Of Work, this concept is difficulty, or a configurable variable that will change how hard it is to come up with an acceptable hash for a particular block. \n\nIn PoW miners will need to guess at the block hash using considerable amounts of computing power until they come up with an acceptable hash. Each node in the network accept the longest blockchain as the source of truth, so long as that blockchain is valid. We can check to make sure a blockchain is valid by checking to see that all the hashes and previous hashes are properly calculated. ",
  "language": "javascript",
  "language_version": "8.x/babel",
  "position": 5,
  "task": "## Chain Validation\n\nSince this blockchain is going to be used on a peer to peer network, we'll want to be able to run a function that will determine whether or not the blockchain is valid. Let's create that function `isValid` on the Blockchain class.\n\nThis function should be checking the integrity on all blocks in the chain. Each block's `hash` should be a valid hash of it's `previousHash` and `data`. Each block's `previousHash` should point to the current valid hash of the previous block.\n\n> *Hint*: You can use `console.log` to log messages to the output. \n\n> *Hint*: If your `hash` is the return value of the `SHA256` function it's an array of bytes and you will need to turn it into a string (`.toString`) to compare it.",
  "test_framework": "mocha_bdd",
  "title": "Validating the Chain",
  "updated_at": "2018-10-16T01:50:10.793Z",
  "created_at": "2018-10-16T01:50:10.793Z"
}