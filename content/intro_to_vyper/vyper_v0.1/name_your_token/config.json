{
  "_id": "5bc8af52626daf9c54d61299",
  "_type": "CodeStage",
  "container_id": "5bb2c8ded9f99705a60c62d3",
  "title": "Name your Token",
  "position": 1,
  "validated_contract": "Token",
  "language_version": "0.1.0b3",
  "language": "vyper",
  "test_framework": "truffle_with_mocha",
  "updated_at": "2018-11-08T02:51:28.634Z",
  "created_at": "2018-10-18T16:05:38.981Z",
  "code_file_ids": [
    "5bc8b0cd626daf9c54d6129d",
    "5bb2d834d9f99705a60c6308"
  ],
  "abi_validations": [
    {
      "_id": "5bd1f309626daf1162be4be7",
      "constant": "true",
      "payable": "false",
      "error": null,
      "task_display": "Create a public 'symbol' getter",
      "name": "symbol",
      "type": "function",
      "outputs": [
        {
          "_id": "5bd1f309626daf1162be4be8",
          "name": null,
          "type": "bytes"
        }
      ]
    },
    {
      "_id": "5bd1f309626daf1162be4be9",
      "constant": "true",
      "payable": "false",
      "error": null,
      "task_display": "Create a public 'name' getter",
      "name": "name",
      "type": "function",
      "outputs": [
        {
          "_id": "5bd1f309626daf1162be4bea",
          "name": null,
          "type": "bytes"
        }
      ]
    }
  ],
  "task": "## Best Part of making a token...\n\n...is naming it, of course! Now's your chance.\n\n### Create a Token Symbol \n\nFirst let's create a token symbol. This `symbol` will be used as short ticker, so let's make it between **1 and 5 capital letters**. In order to do that, we'll need to create a [byte array](?tab=details&scroll=Byte%20Array) called `symbol`. \n\nThis should be a public state variable on our contract and should be initialized in the constructor.  \n\nGo ahead and give it whatever symbol you'd like! `I`, `FOO`, `BAR`, `PIZZA`, any 5 capital letters.\n\n### Create a Token Name\n\nSimilar to the token `symbol` let's create another [byte array](?tab=details&scroll=Byte%20Array) called `name`. This should be a public state variable and initialized in our constructor as well.\n\nFeel free to choose a bytes array of any length and name your token whatever you'd like! ",
  "details": "## Byte Array\n\nA **byte** is eight `1`s and `0`s (called bits) so it can store the values `0000 0000` through `1111 1111` or `0` through `255` in decimal. \n\nA **byte array** is simply a collection of **bytes**. We want to be able to store characters in our bytes array, how many can we store? \n\nUsing [UTF-8](https://en.wikipedia.org/wiki/UTF-8) encoding we can fit one character into a byte. As such the length of a byte array is directly tied to the number of characters we can store inside of the array. For instance:\n\n```\nvalue: bytes[5]\nvalue = \"apple\"\n```\n\nWorks great! \n\nSimilarly, if we tried to store just \"a\" it would work as well. For `bytes[n]`, `n` indicates the **maximum** number of bytes we can store.\n\nIf however, we tried to store `\"apples\"` inside our `bytes[5]` we'd get the following compilation error:\n\n```\nCannot cast from greater max-length 6 to shorter max-length 5\n```\n\n> We should be frugal with the memory we store on the blockchain, so we should make sure to only use the memory space we need. If we know ahead of time that we only need 5 characters, we should make a byte array of length 5. ",
  "completion_message": "## A Symbolic Victory\n\nWe're very pleased you have named your token. \n\nIt will most certainly go on to do great things! "
}