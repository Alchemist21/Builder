{
  "_id": "5b590989d9f997399b71e46e",
  "_type": "CodeStage",
  "code_file_ids": [
    "5b5909b3d9f997399b71e46f",
    "5b58fffbd9f997399b71e44a",
    "5b69fdfbd9f9970c8b2af0e3"
  ],
  "completion_message": "## Tally-Ho! \n\nGreat! Now we can keep a running tally of our votes. This is a huge step towards creating a decentralized voting system. \n\nNext we'll consider what happens when someone wants to change their vote.",
  "container_id": "5b58fc40d9f997399b71e3fd",
  "details": "## Unsigned Integers\n\nThe keyword `uint` in Solidity is an unsigned integer. Unsigned meaning it does not use a bit to indicate whether or not the number is positive or negative. \n\nBy default the `uint` keyword will default to a `uint256` where 256 is the number of bits that will be used to store the integer. \n\nCheck out the [Solidity Documentation on Integers](http://solidity.readthedocs.io/en/v0.4.18/types.html#integers) for more info! \n\n## Element Lookup in Arrays\n\nRecall that when we want to lookup a value in an array we can pass in an index:\n\n```\nMeeting storage meeting = meetings[0];\n```\n\nThis would give us the first `meeting` in the `meetings` array.\n\n## Property Lookup in Structs\n\nFor a struct we should be able to look up properties using the `.` notation so if we have a property `time` on our `Meeting` struct:\n\n```\nuint time = meeting.time;\n```\n\nThis will allow us to look up the time from our `meeting` instance. ",
  "language": "solidity",
  "language_version": "0.4.18",
  "position": 1,
  "task": "## Tally the votes! \n\nNow we'll need to create a way for people to weigh in on whether they support or reject a vote. \n\n### Add Tally Member Variables\n\nWe'll need to create two [unsigned integers](?tab=details&scroll=Unsigned%20Integers) that we will add to our `Vote` struct: \n\n1. `uint256 yes` - The number of voters who support the vote.\n2. `uint256 no` - The number of voters who do not support the vote\n\n### Cast Vote Function\n\nLet's create a function `castVote` which takes in two arguments:\n\n1. A `uint256` vote id that corresponds to the index of the vote in our `votes` array. Using this index we'll be able to lookup the vote.\n2. A `bool` that indicates whether or not this particular voter supports the `vote`. \n\nThis function should update our `yes` and `no` variables on `Vote` so we can see the total number of voters and how many support or reject the vote. \n",
  "test_framework": "truffle_with_mocha",
  "title": "Cast Your Vote!",
  "validated_contract": "Voting",
  "updated_at": "2018-11-08T02:51:28.286Z",
  "created_at": "2018-10-16T01:50:10.308Z",
  "abi_validations": [
    {
      "_id": "5b731578d9f9970a465ebced",
      "constant": "nil",
      "payable": "nil",
      "error": null,
      "task_display": "Create a castVote function.",
      "name": "castVote",
      "type": "function",
      "inputs": [
        {
          "_id": "5b731578d9f9970a465ebcee",
          "name": null,
          "type": "uint256"
        },
        {
          "_id": "5b731578d9f9970a465ebcef",
          "name": null,
          "type": "bool"
        }
      ]
    }
  ]
}