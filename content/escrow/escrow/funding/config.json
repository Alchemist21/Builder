{
  "_id": "5adab204929d249e5faefb4e",
  "_type": "CodeStage",
  "code_file_ids": [
    "5adab204929d249e5faefb55",
    "5adab204929d249e5faefb5a"
  ],
  "completion_message": "### Right on! \n\nThis contract now accepts the funds to make this transaction possible. What kind of applications might require an escrow transaction? \n\nStart brainstorming now, we're excited to see what you will build!",
  "container_id": "5adab204929d249e5faefb4c",
  "details": "## Payable Keyword\nIn order to fund a contract with Ether, the **payable keyword** must be added to a function. Letâ€™s update our constructor function to accept Ether by adding the payable modifier.\n\n```\nfunction() public payable { }\n```\n\nJust by adding ```payable``` to our function, we are able to **fund our contract with no additional Solidity code!**\n\nIn later stages, we will learn how to create a JavaScript API which will call the constructor function and pass in the desired funded value. \n\nRefer to the [Contracts](http://solidity.readthedocs.io/en/v0.4.19/contracts.html) section in the Solidity documentation for more information on function modifiers.\n",
  "language": "solidity",
  "language_version": "0.4.19",
  "position": 2,
  "task": "## Funding The Escrow\n\nNow we're going to make sure the depositor can properly fund the escrow contract. To do so, our constructor is going to need to be able to accept ether from person deploying the contract.\n\n1. Add a [Payable Keyword](?tab=details&scroll=Payable%20Modifier) to our constructor\n\n> This stage is pretty straightforward but it's important to check out the details to understand what the `payable` keyword does once you've placed successfully added it.\n",
  "test_framework": "truffle_with_mocha",
  "title": "Funding",
  "validated_contract": "EscrowContract",
  "updated_at": "2018-11-08T02:51:28.559Z",
  "created_at": "2018-10-16T01:50:10.479Z",
  "abi_validations": [
    {
      "_id": "5b6f5a91d9f9974bb8518d24",
      "constant": "nil",
      "payable": "true",
      "error": "We could not find a constructor in your EscrowContract with two address parameters (for arbiter and beneficiary).",
      "task_display": "Modify the Constructor to be payable",
      "name": null,
      "type": "constructor",
      "inputs": [
        {
          "_id": "5b6f5a91d9f9974bb8518d25",
          "name": null,
          "type": "address"
        },
        {
          "_id": "5b6f5a91d9f9974bb8518d26",
          "name": null,
          "type": "address"
        }
      ]
    }
  ]
}