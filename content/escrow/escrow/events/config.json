{
  "_id": "5b081fd8e6b0b05154025873",
  "_type": "CodeStage",
  "code_file_ids": [
    "5adab204929d249e5faefb55",
    "5b082665e6b0b05154025883"
  ],
  "completion_message": "## Approved! \n\nWe approve of the code you just wrote. The code you wrote approves of the funds the depositor deposits. Kermit the frog approves of being green.\n\nNow that your smart contract is complete, we'll move onto deploying and interacting with it! ",
  "container_id": "5adab204929d249e5faefb4c",
  "details": "## Events\nIt should be noted that using **Events cost additional gas** and can become quite expensive. Because of the gas cost, you should think about how an event will benefit your application before implementation as it is not always necessary.\n\nThis event will log the balance of the contract before transferring the balance to the beneficiary.\n\nDefine an event called ```Approved``` whose argument is the contract balance. \n\nRemember that **all variables must have a type** (even within function parameters) including integers. It is common to use a **256 bit unsigned integer** in this case. \n\n```\nevent Approved(type variable);\n```\n\nLastly, invoke the Approved event within the approve function, passing in the contract balance.\n\nVisit the Solidity documentation for more information on [events](http://solidity.readthedocs.io/en/v0.4.19/contracts.html#events).\n\n## Truffle Event Bug\n\nIf you happen to run into an issue while running your tests:\n\n```\nTypeError: Cannot read property 'constructor' of undefined\n```\n\nThis is a known Truffle issue and we're waiting for a resolution. \n\nYou're likely running into this because you did not give your event variable a name:\n\n```\nevent DoSomething(uint);\n```\n\nInstead of:\n\n```\nevent DoSomething(uint variableName);\n```",
  "language": "solidity",
  "language_version": "0.4.19",
  "position": 5,
  "task": "## Approval Event\n\nWhen a transaction occurs through a smart contract, that transaction is written to the blockchain. \n\nEvents in Solidity help to **log additional information** about a transaction and can additionally be a useful way for JavaScript developers to subscribe to particular events they care about from your contract. \n\n1. Let's create an `Approved` event that takes in a `uint` representing the balance prior to the approval.\n2. Invoke the Approved event within the approve function, passing in the balance. ",
  "test_framework": "truffle_with_mocha",
  "title": "Events",
  "validated_contract": "EscrowContract",
  "updated_at": "2018-11-08T02:51:28.822Z",
  "created_at": "2018-10-16T01:50:10.640Z",
  "abi_validations": [
    {
      "_id": "5b735742d9f9970a465ebd09",
      "constant": "nil",
      "payable": "nil",
      "error": "Remember to add an Approved event to track when the event was approved!",
      "task_display": "Create an Approved Event with an unsigned integer argument",
      "name": "Approved",
      "type": "event",
      "inputs": [
        {
          "_id": "5b735742d9f9970a465ebd0a",
          "name": null,
          "type": "uint256"
        }
      ]
    }
  ]
}